<application>
  <component name="IntentionManagerSettings">
    <ignoreAction name="Haskell/Add parens around expression" />
    <ignoreAction name="Haskell/Remove parens around expression" />
    <ignoreAction name="Groovy/Grab" />
    <ignoreAction name="Groovy/Closures/Make Closure Call Explicit" />
    <ignoreAction name="Groovy/Closures/Make Closure Call Implicit" />
    <ignoreAction name="Groovy/Closures/Replace Each With For-In" />
    <ignoreAction name="Groovy/Closures/Replace For-In With Each" />
    <ignoreAction name="Groovy/Comments/Replace With C-Style Comment" />
    <ignoreAction name="Groovy/Control flow/Add constructor parameter for field" />
    <ignoreAction name="Groovy/Control flow/DeMorgan's Law" />
    <ignoreAction name="Groovy/Control flow/Expand Boolean" />
    <ignoreAction name="Groovy/Control flow/Flip Comparison Operands" />
    <ignoreAction name="Groovy/Control flow/Flip Conditional" />
    <ignoreAction name="Groovy/Control flow/Flip Conjunction Operands" />
    <ignoreAction name="Groovy/Control flow/Flip if statements" />
    <ignoreAction name="Groovy/Control flow/Invert 'if' condition" />
    <ignoreAction name="Groovy/Control flow/Merge Else If" />
    <ignoreAction name="Groovy/Control flow/Merge Nested Ifs To ANDed Condition" />
    <ignoreAction name="Groovy/Control flow/Negate Comparison" />
    <ignoreAction name="Groovy/Control flow/Remove redundant 'else' keyword" />
    <ignoreAction name="Groovy/Control flow/Replace ''?:'' with if else" />
    <ignoreAction name="Groovy/Control flow/Replace if-statement with ternary operator" />
    <ignoreAction name="Groovy/Control flow/Simplify Conditional Expression" />
    <ignoreAction name="Groovy/Control flow/Split Else If" />
    <ignoreAction name="Groovy/Control flow/Split into 2 if's" />
    <ignoreAction name="Groovy/Declaration/Create field for parameter" />
    <ignoreAction name="Groovy/Declaration/Declare explicit type" />
    <ignoreAction name="Groovy/Declaration/Groovy Introduce local variable" />
    <ignoreAction name="Groovy/Declaration/Implement abstract class or interface" />
    <ignoreAction name="Groovy/Declaration/Make 'private'" />
    <ignoreAction name="Groovy/Declaration/Make 'protected'" />
    <ignoreAction name="Groovy/Declaration/Make 'public'" />
    <ignoreAction name="Groovy/Declaration/Remove explicit type declaration" />
    <ignoreAction name="Groovy/Expression conversions/Break string on '\n'" />
    <ignoreAction name="Groovy/Expression conversions/Cast to char" />
    <ignoreAction name="Groovy/Expression conversions/Convert GString To String" />
    <ignoreAction name="Groovy/Expression conversions/Convert Groovy native map to class instances" />
    <ignoreAction name="Groovy/Expression conversions/Convert Indexing Method To [] Form" />
    <ignoreAction name="Groovy/Expression conversions/Convert JUnit assertion to assert statement" />
    <ignoreAction name="Groovy/Expression conversions/Convert Java-Style Array Creation to Groovy Syntax" />
    <ignoreAction name="Groovy/Expression conversions/Convert String Concatenation to GString" />
    <ignoreAction name="Groovy/Expression conversions/Convert To Binary" />
    <ignoreAction name="Groovy/Expression conversions/Convert To Decimal" />
    <ignoreAction name="Groovy/Expression conversions/Convert To Hexadecimal" />
    <ignoreAction name="Groovy/Expression conversions/Convert To Octal" />
    <ignoreAction name="Groovy/Expression conversions/Convert [] Form To Index Method" />
    <ignoreAction name="Groovy/Expression conversions/Convert cast expression to safe cast expression" />
    <ignoreAction name="Groovy/Expression conversions/Convert literal to multiline literal" />
    <ignoreAction name="Groovy/Expression conversions/Convert method to property of closure type" />
    <ignoreAction name="Groovy/Expression conversions/Convert multiline string to single-line" />
    <ignoreAction name="Groovy/Expression conversions/Convert property to method" />
    <ignoreAction name="Groovy/Expression conversions/Convert simple getter to property" />
    <ignoreAction name="Groovy/Expression conversions/Convert string literal to dollar-slashy string" />
    <ignoreAction name="Groovy/Expression conversions/Convert string literal to regular expression" />
    <ignoreAction name="Groovy/Expression conversions/Convert to @CompileStatic" />
    <ignoreAction name="Groovy/Expression conversions/Move class to separate file" />
    <ignoreAction name="Groovy/Expression conversions/Remove Unnecessary Braces in GString" />
    <ignoreAction name="Groovy/Expression conversions/Remove unnecessary escape characters" />
    <ignoreAction name="Groovy/Expression conversions/Remove unnecessary parentheses from method call" />
    <ignoreAction name="Groovy/Expression conversions/Rename class to corresponding file name" />
    <ignoreAction name="Groovy/Expression conversions/Rename file to corresponding class name" />
    <ignoreAction name="Groovy/Expression conversions/Split Variable Declaration" />
    <ignoreAction name="Groovy/Groovy-style/Add On Demand Static Import in Groovy" />
    <ignoreAction name="Groovy/Groovy-style/Add Single-Member Static Import in Groovy" />
    <ignoreAction name="Groovy/Groovy-style/Add explicit types for all parameters in method declaration" />
    <ignoreAction name="Groovy/Groovy-style/Add return type to method declaration" />
    <ignoreAction name="Groovy/Groovy-style/Change anonymous class to dynamic instantiation" />
    <ignoreAction name="Groovy/Groovy-style/Convert method or closure parameters to map entries" />
    <ignoreAction name="Groovy/Groovy-style/Format braces in separate lines" />
    <ignoreAction name="Groovy/Groovy-style/Format closing closure braces in one line" />
    <ignoreAction name="Groovy/Groovy-style/Remove redundant .class" />
    <ignoreAction name="Groovy/Groovy-style/Remove unnecessary 'return' keyword" />
    <ignoreAction name="Groovy/Other/Add 'value='" />
    <ignoreAction name="Groovy/Other/Alias import statically imported member" />
    <ignoreAction name="Groovy/Other/Copy string concatenation text to clipboard" />
    <ignoreAction name="Groovy/Other/Create missing 'switch' branches" />
    <ignoreAction name="Groovy/Other/Sort map entries alphabetically" />
    <ignoreAction name="Java/Annotations/Add annotation" />
    <ignoreAction name="Java/Annotations/Annotate Externally" />
    <ignoreAction name="Java/Annotations/Annotate overriding methods and their parameters" />
    <ignoreAction name="Java/Annotations/Deannotate" />
    <ignoreAction name="Java/Annotations/Edit method contract" />
    <ignoreAction name="Java/Annotations/Edit range" />
    <ignoreAction name="Java/Annotations/Make External Annotations Explicit" />
    <ignoreAction name="Java/Annotations/Make Inferred Annotations Explicit" />
    <ignoreAction name="Java/Boolean/De Morgan's laws" />
    <ignoreAction name="Java/Boolean/Expand boolean" />
    <ignoreAction name="Java/Boolean/Expand boolean to multiple ifs" />
    <ignoreAction name="Java/Boolean/Flip comparison" />
    <ignoreAction name="Java/Boolean/Negate comparison" />
    <ignoreAction name="Java/Boolean/Negate conditional" />
    <ignoreAction name="Java/Boolean/Simplify boolean expression" />
    <ignoreAction name="Java/Comments/Move comment to separate line" />
    <ignoreAction name="Java/Comments/Replace with block comment" />
    <ignoreAction name="Java/Comments/Replace with end-of-line comment" />
    <ignoreAction name="Java/Concurrency/Convert to LongAdder" />
    <ignoreAction name="Java/Concurrency/Convert to ThreadLocal" />
    <ignoreAction name="Java/Concurrency/Convert to atomic" />
    <ignoreAction name="Java/Conditional Operator/Flip conditional" />
    <ignoreAction name="Java/Conditional Operator/Replace conditional expression with boolean expression" />
    <ignoreAction name="Java/Control Flow/Collapse into loop" />
    <ignoreAction name="Java/Control Flow/Convert 'compareTo()' expression to 'equals()' call" />
    <ignoreAction name="Java/Control Flow/Create missing switch branches" />
    <ignoreAction name="Java/Control Flow/Create switch statement" />
    <ignoreAction name="Java/Control Flow/Extract If Condition" />
    <ignoreAction name="Java/Control Flow/Extract to method reference" />
    <ignoreAction name="Java/Control Flow/Extract while loop condition to internal if statement" />
    <ignoreAction name="Java/Control Flow/Invert 'if' condition" />
    <ignoreAction name="Java/Control Flow/Iterate" />
    <ignoreAction name="Java/Control Flow/Merge else if" />
    <ignoreAction name="Java/Control Flow/Merge nested ifs" />
    <ignoreAction name="Java/Control Flow/Merge parallel ifs" />
    <ignoreAction name="Java/Control Flow/Merge sequential ifs" />
    <ignoreAction name="Java/Control Flow/Move up into 'if' statement branches" />
    <ignoreAction name="Java/Control Flow/Replace do while loop with while loop" />
    <ignoreAction name="Java/Control Flow/Replace for-each loop with indexed for loop" />
    <ignoreAction name="Java/Control Flow/Replace for-each loop with iterator for loop" />
    <ignoreAction name="Java/Control Flow/Replace for-each loop with optimized indexed for loop" />
    <ignoreAction name="Java/Control Flow/Replace switch with if" />
    <ignoreAction name="Java/Control Flow/Replace while loop with do while loop" />
    <ignoreAction name="Java/Control Flow/Reverse direction of for loop" />
    <ignoreAction name="Java/Control Flow/Split 'if'" />
    <ignoreAction name="Java/Control Flow/Split else if" />
    <ignoreAction name="Java/Control Flow/Split switch branch with several case values into individual 'switch' branches" />
    <ignoreAction name="Java/Control Flow/Swap 'if' statements" />
    <ignoreAction name="Java/Control Flow/Transform body to single exit-point form" />
    <ignoreAction name="Java/Control Flow/Unroll loop" />
    <ignoreAction name="Java/Control Flow/Unwrap 'else' branch" />
    <ignoreAction name="Java/Declaration/Add Javadoc" />
    <ignoreAction name="Java/Declaration/Add Runtime Exception to Method Signature" />
    <ignoreAction name="Java/Declaration/Add explicit type arguments" />
    <ignoreAction name="Java/Declaration/Assign parameter to field" />
    <ignoreAction name="Java/Declaration/Bind parameters to fields" />
    <ignoreAction name="Java/Declaration/Cast expression" />
    <ignoreAction name="Java/Declaration/Change class type parameter" />
    <ignoreAction name="Java/Declaration/Change variable type to type of initializer" />
    <ignoreAction name="Java/Declaration/Convert Color representation" />
    <ignoreAction name="Java/Declaration/Convert compact constructor to canonical" />
    <ignoreAction name="Java/Declaration/Convert interface to class" />
    <ignoreAction name="Java/Declaration/Copy abstract method implementation" />
    <ignoreAction name="Java/Declaration/Create Test" />
    <ignoreAction name="Java/Declaration/Create field for parameter" />
    <ignoreAction name="Java/Declaration/Create local variable from instanceof usage" />
    <ignoreAction name="Java/Declaration/Extract Set from comparison chain" />
    <ignoreAction name="Java/Declaration/Generate missed test methods" />
    <ignoreAction name="Java/Declaration/Generate overloaded method with default parameter values" />
    <ignoreAction name="Java/Declaration/Implement abstract class or interface" />
    <ignoreAction name="Java/Declaration/Implement abstract method" />
    <ignoreAction name="Java/Declaration/Make method default" />
    <ignoreAction name="Java/Declaration/Move initializer to constructor" />
    <ignoreAction name="Java/Declaration/Move initializer to setUp method" />
    <ignoreAction name="Java/Declaration/Replace adapter extension with listener implementation" />
    <ignoreAction name="Java/Declaration/Replace exceptions in throws clause with single more general exception" />
    <ignoreAction name="Java/Declaration/Replace implements with static import" />
    <ignoreAction name="Java/Declaration/Split declaration" />
    <ignoreAction name="Java/Declaration/Split declaration and initialization" />
    <ignoreAction name="Java/Declaration/Unimplement Interface/Class" />
    <ignoreAction name="Java/Declaration/Wrap vararg arguments with explicit array creation" />
    <ignoreAction name="Java/I18N/Annotate capitalization type" />
    <ignoreAction name="Java/I18N/Convert to Basic Latin" />
    <ignoreAction name="Java/I18N/Replace concatenation with formatted output" />
    <ignoreAction name="Java/Imports/Add on-demand static import" />
    <ignoreAction name="Java/Imports/Add single-member static import" />
    <ignoreAction name="Java/Imports/Expand static import" />
    <ignoreAction name="Java/Imports/Replace cast with variable" />
    <ignoreAction name="Java/Imports/Replace on demand import with single class imports" />
    <ignoreAction name="Java/JUnit/Convert @DataPoint(s) annotation holder" />
    <ignoreAction name="Java/JUnit/Create JUnit assertion" />
    <ignoreAction name="Java/JUnit/Flip assert literal" />
    <ignoreAction name="Java/JUnit/Replace assertTrue, assertFalse, or assertNull with assertEquals" />
    <ignoreAction name="Java/Modifiers/Change access modifier" />
    <ignoreAction name="Java/Numbers/Convert number" />
    <ignoreAction name="Java/Other/Compute constant value for subexpression" />
    <ignoreAction name="Java/Other/Eliminate parentheses" />
    <ignoreAction name="Java/Other/Expand call chain into call sequence" />
    <ignoreAction name="Java/Other/Extract increment" />
    <ignoreAction name="Java/Other/Flip binary expression" />
    <ignoreAction name="Java/Other/Flip commutative method call" />
    <ignoreAction name="Java/Other/Flip prefix/postfix expression" />
    <ignoreAction name="Java/Other/Flip setter call" />
    <ignoreAction name="Java/Other/Inline increment/decrement" />
    <ignoreAction name="Java/Other/Merge sequential method calls into call chain" />
    <ignoreAction name="Java/Other/Put arguments on one line" />
    <ignoreAction name="Java/Other/Put arguments on separate lines" />
    <ignoreAction name="Java/Other/Put parameters on one line" />
    <ignoreAction name="Java/Other/Put parameters on separate lines" />
    <ignoreAction name="Java/Other/Replace assignment with operator assignment" />
    <ignoreAction name="Java/Other/Replace assignment with postfix expression" />
    <ignoreAction name="Java/Other/Replace octal escape with unicode escape" />
    <ignoreAction name="Java/Other/Replace operator assignment with assignment" />
    <ignoreAction name="Java/Other/Replace operator assignment with postfix expression" />
    <ignoreAction name="Java/Other/Replace postfix expression with assignment" />
    <ignoreAction name="Java/Other/Replace postfix expression with operator assignment" />
    <ignoreAction name="Java/Other/Replace unicode escape with unescaped character" />
    <ignoreAction name="Java/Other/Replace with 'Arrays.asList()'" />
    <ignoreAction name="Java/Other/Replace with mutable collection" />
    <ignoreAction name="Java/Other/Use 'java.util.Objects.requireNonNull()' expression" />
    <ignoreAction name="Java/Other/Wrap with unmodifiable collection or map" />
    <ignoreAction name="Java/Refactorings/Encapsulate field" />
    <ignoreAction name="Java/Refactorings/Extract method" />
    <ignoreAction name="Java/Refactorings/Introduce local variable" />
    <ignoreAction name="Java/Refactorings/Replace nested function call with composition" />
    <ignoreAction name="Java/Shift Operation/Replace multiply with shift" />
    <ignoreAction name="Java/Shift Operation/Replace shift with multiply" />
    <ignoreAction name="Java/Streams/Extract to separate mapping method" />
    <ignoreAction name="Java/Streams/Inline stream mapping method" />
    <ignoreAction name="Java/Streams/Merge filters" />
    <ignoreAction name="Java/Streams/Split filter" />
    <ignoreAction name="Java/Strings/Break string on '\n'" />
    <ignoreAction name="Java/Strings/Copy string concatenation text to the clipboard" />
    <ignoreAction name="Java/Strings/Fix Character Literal" />
    <ignoreAction name="Java/Strings/Join concatenated string literals" />
    <ignoreAction name="Java/Strings/Replace + with StringBuilder.append()" />
    <ignoreAction name="Java/Strings/Replace String.format() with concatenation" />
    <ignoreAction name="Java/Strings/Replace char with string" />
    <ignoreAction name="Java/Strings/Replace string concatenation with String.format()" />
    <ignoreAction name="Java/Try Statements/Detail exceptions" />
    <ignoreAction name="Java/Try Statements/Merge nested try statements" />
    <ignoreAction name="Java/Try Statements/Replace catch section with throws declaration" />
    <ignoreAction name="Java/Try Statements/Replace try-with-resources with try-finally" />
    <ignoreAction name="Java/Try Statements/Surround with try-with-resources block" />
    <ignoreAction name="EditorConfig/Add declaration part" />
    <ignoreAction name="EditorConfig/Invert option value" />
    <ignoreAction name="Groovy/Closures/Make closure call explicit" />
    <ignoreAction name="Groovy/Closures/Make closure call implicit" />
    <ignoreAction name="Groovy/Closures/Replace each with for-in" />
    <ignoreAction name="Groovy/Closures/Replace for-in with each" />
    <ignoreAction name="Groovy/Comments/Replace with C-style comment" />
    <ignoreAction name="Groovy/Control flow/DeMorgan's law" />
    <ignoreAction name="Groovy/Control flow/Expand boolean" />
    <ignoreAction name="Groovy/Control flow/Flip comparison operands" />
    <ignoreAction name="Groovy/Control flow/Flip conditional" />
    <ignoreAction name="Groovy/Control flow/Flip conjunction operands" />
    <ignoreAction name="Groovy/Control flow/Merge else if" />
    <ignoreAction name="Groovy/Control flow/Merge nested ifs to and-ed condition" />
    <ignoreAction name="Groovy/Control flow/Negate comparison" />
    <ignoreAction name="Groovy/Control flow/Simplify conditional expression" />
    <ignoreAction name="Groovy/Control flow/Split else if" />
    <ignoreAction name="Groovy/Control flow/Split into 2 'if' statements" />
    <ignoreAction name="Groovy/Declaration/Introduce local variable" />
    <ignoreAction name="Groovy/Expression conversions/Convert GString to String" />
    <ignoreAction name="Groovy/Expression conversions/Convert [] form to index method" />
    <ignoreAction name="Groovy/Expression conversions/Convert groovy native map to class instances" />
    <ignoreAction name="Groovy/Expression conversions/Convert indexing method to [] form" />
    <ignoreAction name="Groovy/Expression conversions/Convert java-style array creation to groovy syntax" />
    <ignoreAction name="Groovy/Expression conversions/Convert string concatenation to GString" />
    <ignoreAction name="Groovy/Expression conversions/Convert to Binary" />
    <ignoreAction name="Groovy/Expression conversions/Convert to Decimal" />
    <ignoreAction name="Groovy/Expression conversions/Convert to Hexadecimal" />
    <ignoreAction name="Groovy/Expression conversions/Convert to Octal" />
    <ignoreAction name="Groovy/Expression conversions/Remove unnecessary braces in GString" />
    <ignoreAction name="Groovy/Expression conversions/Split variable declaration" />
    <ignoreAction name="Groovy/Groovy-style/Add on demand static import" />
    <ignoreAction name="Groovy/Groovy-style/Add single-member static import" />
    <ignoreAction name="Groovy/Groovy-style/Format braces on separate lines" />
    <ignoreAction name="Groovy/Groovy-style/Format closing closure braces on one line" />
    <ignoreAction name="Haskell/Case Split" />
    <ignoreAction name="Java/Collections/Replace with 'Arrays.asList()'" />
    <ignoreAction name="Java/Collections/Replace with mutable collection" />
    <ignoreAction name="Java/Collections/Wrap with unmodifiable collection or map" />
    <ignoreAction name="Java/Comments/Replace with javadoc" />
    <ignoreAction name="Java/Conditions/De Morgan's laws" />
    <ignoreAction name="Java/Conditions/Flip comparison" />
    <ignoreAction name="Java/Conditions/Flip conditional" />
    <ignoreAction name="Java/Conditions/Negate comparison" />
    <ignoreAction name="Java/Conditions/Negate conditional" />
    <ignoreAction name="Java/Conditions/Replace conditional expression with boolean expression" />
    <ignoreAction name="Java/Conditions/Simplify boolean expression" />
    <ignoreAction name="Java/Control flow/Collapse into loop" />
    <ignoreAction name="Java/Control flow/Create missing switch branches" />
    <ignoreAction name="Java/Control flow/Create switch statement" />
    <ignoreAction name="Java/Control flow/Expand boolean" />
    <ignoreAction name="Java/Control flow/Expand boolean to multiple ifs" />
    <ignoreAction name="Java/Control flow/Extract If Condition" />
    <ignoreAction name="Java/Control flow/Extract to method reference" />
    <ignoreAction name="Java/Control flow/Extract while loop condition to internal if statement" />
    <ignoreAction name="Java/Control flow/Invert 'if' condition" />
    <ignoreAction name="Java/Control flow/Iterate" />
    <ignoreAction name="Java/Control flow/Merge else if" />
    <ignoreAction name="Java/Control flow/Merge nested 'if' statements" />
    <ignoreAction name="Java/Control flow/Merge parallel ifs" />
    <ignoreAction name="Java/Control flow/Merge sequential 'if' statements" />
    <ignoreAction name="Java/Control flow/Move up into 'if' statement branches" />
    <ignoreAction name="Java/Control flow/Replace do while loop with while loop" />
    <ignoreAction name="Java/Control flow/Replace for-each loop with indexed for loop" />
    <ignoreAction name="Java/Control flow/Replace for-each loop with iterator for loop" />
    <ignoreAction name="Java/Control flow/Replace for-each loop with optimized indexed for loop" />
    <ignoreAction name="Java/Control flow/Replace switch with if" />
    <ignoreAction name="Java/Control flow/Replace while loop with do while loop" />
    <ignoreAction name="Java/Control flow/Reverse direction of for loop" />
    <ignoreAction name="Java/Control flow/Split 'if'" />
    <ignoreAction name="Java/Control flow/Split else if" />
    <ignoreAction name="Java/Control flow/Split switch branch with several case values into individual 'switch' branches" />
    <ignoreAction name="Java/Control flow/Swap 'if' statements" />
    <ignoreAction name="Java/Control flow/Transform body to single exit-point form" />
    <ignoreAction name="Java/Control flow/Unroll loop" />
    <ignoreAction name="Java/Control flow/Unwrap 'else' branch" />
    <ignoreAction name="Java/Declaration/Replace cast with variable" />
    <ignoreAction name="Java/Declaration/Seal class" />
    <ignoreAction name="Java/Expressions/Compute constant value for subexpression" />
    <ignoreAction name="Java/Expressions/Convert 'compareTo()' expression to 'equals()' call" />
    <ignoreAction name="Java/Expressions/Convert number" />
    <ignoreAction name="Java/Expressions/Eliminate parentheses" />
    <ignoreAction name="Java/Expressions/Flip binary expression" />
    <ignoreAction name="Java/Expressions/Flip commutative method call" />
    <ignoreAction name="Java/Expressions/Flip prefix/postfix expression" />
    <ignoreAction name="Java/Expressions/Flip setter call" />
    <ignoreAction name="Java/Expressions/Insert cast expression" />
    <ignoreAction name="Java/Expressions/Randomly change 'serialVersionUID' initializer" />
    <ignoreAction name="Java/Expressions/Replace assignment with postfix expression" />
    <ignoreAction name="Java/Expressions/Replace multiply with shift" />
    <ignoreAction name="Java/Expressions/Replace operator assignment with assignment" />
    <ignoreAction name="Java/Expressions/Replace operator assignment with postfix expression" />
    <ignoreAction name="Java/Expressions/Replace postfix expression with assignment" />
    <ignoreAction name="Java/Expressions/Replace postfix expression with operator assignment" />
    <ignoreAction name="Java/Expressions/Replace shift with multiply" />
    <ignoreAction name="Java/Internationalization/Annotate capitalization type" />
    <ignoreAction name="Java/Internationalization/Replace concatenation with formatted output" />
    <ignoreAction name="Java/JUnit/Move initializer to setUp method" />
    <ignoreAction name="Java/Lombok/Replace 'val' with explicit type (Lombok)" />
    <ignoreAction name="Java/Lombok/Replace 'var' with explicit type (Lombok)" />
    <ignoreAction name="Java/Lombok/Replace explicit type with 'val' (Lombok)" />
    <ignoreAction name="Java/Lombok/Replace explicit type with 'var' (Lombok)" />
    <ignoreAction name="Java/Lombok/Replace with annotations (Lombok)" />
    <ignoreAction name="Java/Other/Change access modifier" />
    <ignoreAction name="Java/Other/Sort content" />
    <ignoreAction name="Java/Refactorings/Replace constructor with builder" />
    <ignoreAction name="Java/Refactorings/Replace constructor with factory method" />
    <ignoreAction name="Java/Strings/Fix character literal" />
    <ignoreAction name="Java/Strings/Replace octal escape with unicode escape" />
    <ignoreAction name="Java/Try statements/Detail exceptions" />
    <ignoreAction name="Java/Try statements/Merge nested try statements" />
    <ignoreAction name="Java/Try statements/Replace catch section with throws declaration" />
    <ignoreAction name="Java/Try statements/Replace try-with-resources with try-finally" />
    <ignoreAction name="Java/Try statements/Surround with try-with-resources block" />
    <ignoreAction name="JavaFX/Collapse tag to attribute" />
    <ignoreAction name="JavaFX/Convert to JavaFX property" />
    <ignoreAction name="JavaFX/Expand attribute to tag" />
    <ignoreAction name="JSON/Evaluate JSONPath Expression" />
    <ignoreAction name="JSON/Sort properties alphabetically" />
    <ignoreAction name="Kotlin/Add '@JvmOverloads' annotation" />
    <ignoreAction name="Kotlin/Add '@JvmStatic' annotation" />
    <ignoreAction name="Kotlin/Add '@Throws' annotation" />
    <ignoreAction name="Kotlin/Add 'const' modifier" />
    <ignoreAction name="Kotlin/Add 'val'/'var' to a primary constructor parameter" />
    <ignoreAction name="Kotlin/Add braces" />
    <ignoreAction name="Kotlin/Add braces to all branches" />
    <ignoreAction name="Kotlin/Add explicit type arguments" />
    <ignoreAction name="Kotlin/Add full qualifier" />
    <ignoreAction name="Kotlin/Add getter" />
    <ignoreAction name="Kotlin/Add getter and setter" />
    <ignoreAction name="Kotlin/Add import for member" />
    <ignoreAction name="Kotlin/Add indices to 'for' loop" />
    <ignoreAction name="Kotlin/Add labeled return to the last expression in a lambda" />
    <ignoreAction name="Kotlin/Add missing 'class' keyword" />
    <ignoreAction name="Kotlin/Add missing destructuring component" />
    <ignoreAction name="Kotlin/Add name to the argument" />
    <ignoreAction name="Kotlin/Add names in comment to call arguments" />
    <ignoreAction name="Kotlin/Add names to call arguments" />
    <ignoreAction name="Kotlin/Add names to this argument and all following arguments" />
    <ignoreAction name="Kotlin/Add remaining branches" />
    <ignoreAction name="Kotlin/Add setter" />
    <ignoreAction name="Kotlin/Add underscores" />
    <ignoreAction name="Kotlin/Add use-site target" />
    <ignoreAction name="Kotlin/Change package" />
    <ignoreAction name="Kotlin/Convert 'String' concatenation to a template" />
    <ignoreAction name="Kotlin/Convert Boolean? == const to elvis" />
    <ignoreAction name="Kotlin/Convert Collection constructor to function" />
    <ignoreAction name="Kotlin/Convert anonymous function to a lambda expression" />
    <ignoreAction name="Kotlin/Convert argument to 'Set'" />
    <ignoreAction name="Kotlin/Convert concatenation to 'buildString' call" />
    <ignoreAction name="Kotlin/Convert function to property" />
    <ignoreAction name="Kotlin/Convert function type parameter to receiver" />
    <ignoreAction name="Kotlin/Convert function type receiver to parameter" />
    <ignoreAction name="Kotlin/Convert lambda expression to anonymous function" />
    <ignoreAction name="Kotlin/Convert member to extension" />
    <ignoreAction name="Kotlin/Convert object literal to class" />
    <ignoreAction name="Kotlin/Convert object literal to lambda" />
    <ignoreAction name="Kotlin/Convert parameter to receiver" />
    <ignoreAction name="Kotlin/Convert property getter to initializer" />
    <ignoreAction name="Kotlin/Convert property initializer to getter" />
    <ignoreAction name="Kotlin/Convert property to function" />
    <ignoreAction name="Kotlin/Convert receiver to parameter" />
    <ignoreAction name="Kotlin/Convert template to concatenated string" />
    <ignoreAction name="Kotlin/Convert to 'buildString' call" />
    <ignoreAction name="Kotlin/Convert to also" />
    <ignoreAction name="Kotlin/Convert to anonymous object" />
    <ignoreAction name="Kotlin/Convert to apply" />
    <ignoreAction name="Kotlin/Convert to array parameter" />
    <ignoreAction name="Kotlin/Convert to block body" />
    <ignoreAction name="Kotlin/Convert to comparisons" />
    <ignoreAction name="Kotlin/Convert to enum class" />
    <ignoreAction name="Kotlin/Convert to indexed function call" />
    <ignoreAction name="Kotlin/Convert to lateinit var" />
    <ignoreAction name="Kotlin/Convert to lazy property" />
    <ignoreAction name="Kotlin/Convert to multi-line lambda" />
    <ignoreAction name="Kotlin/Convert to nullable var" />
    <ignoreAction name="Kotlin/Convert to object declaration" />
    <ignoreAction name="Kotlin/Convert to ordinary property" />
    <ignoreAction name="Kotlin/Convert to primary constructor" />
    <ignoreAction name="Kotlin/Convert to run" />
    <ignoreAction name="Kotlin/Convert to sealed class" />
    <ignoreAction name="Kotlin/Convert to secondary constructor" />
    <ignoreAction name="Kotlin/Convert to single-line lambda" />
    <ignoreAction name="Kotlin/Convert to unsafe cast" />
    <ignoreAction name="Kotlin/Convert to unsafeCast() call" />
    <ignoreAction name="Kotlin/Convert to vararg parameter" />
    <ignoreAction name="Kotlin/Convert to with" />
    <ignoreAction name="Kotlin/Converts the assignment statement to an expression" />
    <ignoreAction name="Kotlin/Copy concatenation text to clipboard" />
    <ignoreAction name="Kotlin/Create Kotlin subclass" />
    <ignoreAction name="Kotlin/Create test" />
    <ignoreAction name="Kotlin/DeMorgan Law" />
    <ignoreAction name="Kotlin/Enable/disable a trailing comma in the formatter" />
    <ignoreAction name="Kotlin/Evaluate compile-time expression" />
    <ignoreAction name="Kotlin/Expand boolean expression to 'if else'" />
    <ignoreAction name="Kotlin/Extract declaration from current file" />
    <ignoreAction name="Kotlin/Flatten 'when' expression" />
    <ignoreAction name="Kotlin/Flip 'equals'" />
    <ignoreAction name="Kotlin/Flip binary expression" />
    <ignoreAction name="Kotlin/Implement abstract member" />
    <ignoreAction name="Kotlin/Import members with '*'" />
    <ignoreAction name="Kotlin/Indent raw string" />
    <ignoreAction name="Kotlin/Inline 'when' argument" />
    <ignoreAction name="Kotlin/Insert curly braces around variable" />
    <ignoreAction name="Kotlin/Introduce backing property" />
    <ignoreAction name="Kotlin/Introduce import alias" />
    <ignoreAction name="Kotlin/Introduce local variable" />
    <ignoreAction name="Kotlin/Invert 'if' condition" />
    <ignoreAction name="Kotlin/Iterate over collection" />
    <ignoreAction name="Kotlin/Join declaration and assignment" />
    <ignoreAction name="Kotlin/Lift function call out of 'if'" />
    <ignoreAction name="Kotlin/Make 'open'" />
    <ignoreAction name="Kotlin/Make internal" />
    <ignoreAction name="Kotlin/Make private" />
    <ignoreAction name="Kotlin/Make protected" />
    <ignoreAction name="Kotlin/Make public" />
    <ignoreAction name="Kotlin/Merge 'else if'" />
    <ignoreAction name="Kotlin/Merge 'if's" />
    <ignoreAction name="Kotlin/Move lambda argument into parentheses" />
    <ignoreAction name="Kotlin/Move out of companion object" />
    <ignoreAction name="Kotlin/Move to class body" />
    <ignoreAction name="Kotlin/Move to companion object" />
    <ignoreAction name="Kotlin/Move to constructor" />
    <ignoreAction name="Kotlin/Move to top level" />
    <ignoreAction name="Kotlin/Put arguments on one line" />
    <ignoreAction name="Kotlin/Put arguments on separate lines" />
    <ignoreAction name="Kotlin/Put parameters on one line" />
    <ignoreAction name="Kotlin/Put parameters on separate lines" />
    <ignoreAction name="Kotlin/Remove argument name" />
    <ignoreAction name="Kotlin/Remove braces" />
    <ignoreAction name="Kotlin/Remove braces from all branches" />
    <ignoreAction name="Kotlin/Remove constructor keyword" />
    <ignoreAction name="Kotlin/Remove empty constructor body" />
    <ignoreAction name="Kotlin/Remove empty primary constructor" />
    <ignoreAction name="Kotlin/Remove explicit lambda parameter types (may break code)" />
    <ignoreAction name="Kotlin/Remove explicit supertype qualification" />
    <ignoreAction name="Kotlin/Remove explicit type arguments" />
    <ignoreAction name="Kotlin/Remove explicit type specification" />
    <ignoreAction name="Kotlin/Remove indices in 'for' loop" />
    <ignoreAction name="Kotlin/Remove labeled return from last expression in a lambda" />
    <ignoreAction name="Kotlin/Remove redundant calls of the conversion method" />
    <ignoreAction name="Kotlin/Remove redundant empty class body" />
    <ignoreAction name="Kotlin/Remove single-expression string template" />
    <ignoreAction name="Kotlin/Remove underscores" />
    <ignoreAction name="Kotlin/Remove unnecessary parentheses" />
    <ignoreAction name="Kotlin/Remove unnecessary parentheses from function call with lambda" />
    <ignoreAction name="Kotlin/Rename class to containing file name" />
    <ignoreAction name="Kotlin/Rename file to match top-level class name" />
    <ignoreAction name="Kotlin/Replace '!!' expression with 'if' expression" />
    <ignoreAction name="Kotlin/Replace '_' with parameter name" />
    <ignoreAction name="Kotlin/Replace 'any' with 'all' and vice versa" />
    <ignoreAction name="Kotlin/Replace 'any' with 'none' and vice versa" />
    <ignoreAction name="Kotlin/Replace 'contains' call with 'in' operator" />
    <ignoreAction name="Kotlin/Replace 'if' expression with return" />
    <ignoreAction name="Kotlin/Replace 'if' with 'when'" />
    <ignoreAction name="Kotlin/Replace 'invoke' with direct call" />
    <ignoreAction name="Kotlin/Replace 'it' with explicit parameter" />
    <ignoreAction name="Kotlin/Replace 'try-finally' with 'use()'" />
    <ignoreAction name="Kotlin/Replace 'when' with 'if'" />
    <ignoreAction name="Kotlin/Replace assignment with 'if' expression" />
    <ignoreAction name="Kotlin/Replace assignment with 'when' expression" />
    <ignoreAction name="Kotlin/Replace by reconstructed type" />
    <ignoreAction name="Kotlin/Replace call with unary operator" />
    <ignoreAction name="Kotlin/Replace camel-case name with spaces" />
    <ignoreAction name="Kotlin/Replace elvis expression with 'if' expression" />
    <ignoreAction name="Kotlin/Replace explicit lambda parameter with 'it'" />
    <ignoreAction name="Kotlin/Replace function call with 'if'" />
    <ignoreAction name="Kotlin/Replace function call with the opposite" />
    <ignoreAction name="Kotlin/Replace infix call with ordinary call" />
    <ignoreAction name="Kotlin/Replace overloaded operator with function call" />
    <ignoreAction name="Kotlin/Replace property initializer with 'if' expression" />
    <ignoreAction name="Kotlin/Replace property initializer with 'when' expression" />
    <ignoreAction name="Kotlin/Replace return with 'if' expression" />
    <ignoreAction name="Kotlin/Replace return with 'when' expression" />
    <ignoreAction name="Kotlin/Replace safe access expression with 'if' expression" />
    <ignoreAction name="Kotlin/Replace size check with 'isNotEmpty'" />
    <ignoreAction name="Kotlin/Replace size zero check with 'isEmpty'" />
    <ignoreAction name="Kotlin/Replace snake_case name with spaces" />
    <ignoreAction name="Kotlin/Replace with '+='" />
    <ignoreAction name="Kotlin/Replace with '..' operator" />
    <ignoreAction name="Kotlin/Replace with a 'for' loop" />
    <ignoreAction name="Kotlin/Replace with a 'forEach' function call" />
    <ignoreAction name="Kotlin/Replace with block comment" />
    <ignoreAction name="Kotlin/Replace with end of line comment" />
    <ignoreAction name="Kotlin/Replace with indexing and elvis operator" />
    <ignoreAction name="Kotlin/Replace with infix function call" />
    <ignoreAction name="Kotlin/Replace with ordinary assignment" />
    <ignoreAction name="Kotlin/Simplify boolean expression" />
    <ignoreAction name="Kotlin/Specify all types explicitly in destructuring declaration" />
    <ignoreAction name="Kotlin/Specify explicit lambda signature" />
    <ignoreAction name="Kotlin/Specify type explicitly" />
    <ignoreAction name="Kotlin/Split 'if' into two" />
    <ignoreAction name="Kotlin/Split property declaration" />
    <ignoreAction name="Kotlin/To ordinary string literal" />
    <ignoreAction name="Kotlin/To raw string literal" />
    <ignoreAction name="Kotlin/Use destructuring declaration" />
    <ignoreAction name="Kotlin/Use property access syntax" />
    <ignoreAction name="Kotlin/Use withIndex() instead of manual index increment" />
    <ignoreAction name="Language injection/Edit injected fragment" />
    <ignoreAction name="Language injection/Edit injection settings" />
    <ignoreAction name="Language injection/Inject language or reference" />
    <ignoreAction name="Language injection/Uninject language or reference" />
    <ignoreAction name="LightEdit mode/Open file in project…" />
    <ignoreAction name="Markdown/Configure image" />
    <ignoreAction name="Markdown/Hide errors in code fences" />
    <ignoreAction name="Markdown/Insert column" />
    <ignoreAction name="Markdown/Remove column" />
    <ignoreAction name="Markdown/Remove row" />
    <ignoreAction name="Markdown/Set column alignment" />
    <ignoreAction name="Other/Convert absolute path to relative" />
    <ignoreAction name="Other/Convert relative path to absolute" />
    <ignoreAction name="Other/Create new scratch file from selection" />
    <ignoreAction name="Other/Flip comma" />
    <ignoreAction name="Other/Put elements on multiple lines" />
    <ignoreAction name="Other/Put elements on one line" />
    <ignoreAction name="Other/Rollback changes in current line" />
    <ignoreAction name="Properties/Copy property key to the clipboard" />
    <ignoreAction name="Properties/Copy property value to the clipboard" />
    <ignoreAction name="RegExp/Check RegExp" />
    <ignoreAction name="Shell script/Explain shell" />
    <ignoreAction name="Shell script/Rename all occurrences" />
    <ignoreAction name="XML/Add 'xsi:schemaLocation' attribute" />
    <ignoreAction name="XML/Choose color" />
    <ignoreAction name="XML/Collapse empty tag" />
    <ignoreAction name="XML/Convert CDATA to text" />
    <ignoreAction name="XML/Convert text to CDATA" />
    <ignoreAction name="XML/Fetch external resource" />
    <ignoreAction name="XML/Insert namespace prefix" />
    <ignoreAction name="XML/Manually set up external resource" />
    <ignoreAction name="XML/Rearrange tag attributes" />
    <ignoreAction name="XML/Remove attribute" />
    <ignoreAction name="XML/Remove tag (preserves children)" />
    <ignoreAction name="XML/Reset to default namespace" />
    <ignoreAction name="XML/Split current tag" />
  </component>
</application>